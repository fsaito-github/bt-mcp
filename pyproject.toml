[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "beach-tennis-mcp"
version = "1.0.0"
description = "MCP Server para consultar disponibilidade de quadras de Beach Tennis"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Beach Tennis MCP Team", email = "contato@exemplo.com"}
]
maintainers = [
    {name = "Beach Tennis MCP Team", email = "contato@exemplo.com"}
]
keywords = ["mcp", "beach-tennis", "court-availability", "web-scraping", "crawl4ai"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Sports",
]
requires-python = ">=3.9"
dependencies = [
    "mcp>=1.0.0",
    "beautifulsoup4>=4.12.0",
    "python-dotenv>=1.0.0",
    "crawl4ai>=0.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/seu-usuario/beach-tennis-mcp"
Repository = "https://github.com/seu-usuario/beach-tennis-mcp"
Documentation = "https://github.com/seu-usuario/beach-tennis-mcp#readme"
"Bug Tracker" = "https://github.com/seu-usuario/beach-tennis-mcp/issues"

[project.scripts]
beach-tennis-mcp = "mcp_server.beach_tennis_mcp:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["mcp_server*"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
